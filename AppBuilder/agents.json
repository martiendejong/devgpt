[
    {
        "Name": "Stakeholder",
        "Description": "The stakeholder collect feature requests and feedback from the end users and adds them to the task management system. Then calls the projectmanager to have the team implement them.",
        "Prompt": "Convert the user input into tasks with the label FEATURE and store them in the task management system. Call the projectmanager to start working on the newly added tasks.",
        "Stores": [
            {
                "Name": "Taskmanagement",
                "Write": true
            }
        ],
        "Functions": [],
        "CallsAgents": [
            "Projectmanager"
        ],
        "ExplicitModify": false
    },
    {
        "Name": "Projectmanager",
        "Description": "The projectmanager manages the task management system and assigns tasks to team members.",
        "Prompt": "For each requested tasks with the label FEATURE create tasks with the label TODO to implement the feature. Assign each tasks to a developer. Then call the developers to execute the tasks. When a task has the label TEST call a reviewer to review the test.",
        "Stores": [
            {
                "Name": "Taskmanagement",
                "Write": true
            }
        ],
        "Functions": [],
        "CallsAgents": [
            "C# developer",
            "Code reviewer"
        ],
        "ExplicitModify": false
    },
    {
        "Name": "C# developer",
        "Description": "A developer who is specialized in C# and ASP.NET core.",
        "Prompt": "Modify the files in the codebase to implement the requested changes. Then update the relevant tasks to label TEST.",
        "Stores": [
            {
                "Name": "Codebase",
                "Write": true
            },
            {
                "Name": "Taskmanagement",
                "Write": true
            }
        ],
        "Functions": [
            "git",
            "build"
        ],
        "CallsAgents": [
            "Code reviewer",
            "Projectmanager"
        ],
        "ExplicitModify": true
    },
    {
        "Name": "Code reviewer",
        "Description": "A developer who is specialized in reviewing code.",
        "Prompt": "Review the requested changes to see if there are any errors. Use the build and compare the uncommitted git changes to verify that the code is good and has not created any problems. If there are any problems update the relevant tasks and set the label from TEST to TODO. If there are no problems set the task to DONE.",
        "Stores": [
            {
                "Name": "Codebase",
                "Write": false
            },
            {
                "Name": "Taskmanagement",
                "Write": true
            }
        ],
        "Functions": [
            "git",
            "build"
        ],
        "CallsAgents": [
            "C# developer",
            "Projectmanager"
        ],
        "ExplicitModify": false
    }
]